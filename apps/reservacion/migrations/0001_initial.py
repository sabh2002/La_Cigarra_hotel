# Generated by Django 4.2 on 2023-05-23 20:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cedula', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('direccion', models.CharField(blank=True, max_length=50, null=True)),
                ('telefono', models.CharField(blank=True, max_length=11, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DatosPagoMovil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banco', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=50)),
                ('cedula', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Pago Movil',
            },
        ),
        migrations.CreateModel(
            name='Habitacion',
            fields=[
                ('numeroHabitacion', models.IntegerField(primary_key=True, serialize=False)),
                ('clase', models.CharField(max_length=50)),
                ('tipoHabitacion', models.CharField(max_length=25)),
                ('estado', models.CharField(max_length=25)),
                ('precio', models.IntegerField()),
                ('descripcion', models.TextField()),
            ],
            options={
                'verbose_name': 'Habitacion',
                'verbose_name_plural': 'Habitaciones',
            },
        ),
        migrations.CreateModel(
            name='PrecioDolar',
            fields=[
                ('code', models.CharField(default='dolar', max_length=50, primary_key=True, serialize=False)),
                ('precio', models.FloatField()),
            ],
            options={
                'verbose_name': 'Precio Dolar',
            },
        ),
        migrations.CreateModel(
            name='Productos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_pro', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('stock', models.IntegerField()),
                ('precio', models.FloatField()),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('Aprobada', 'Aprobada'), ('Pendiente', 'Pendiente'), ('Rechazada', 'Rechazada')], default='Pendiente', max_length=25)),
                ('fechaReserva', models.DateTimeField(auto_now_add=True)),
                ('origen', models.CharField(blank=True, max_length=25, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
            },
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_venta', models.DateTimeField(auto_now_add=True)),
                ('total_dolar', models.FloatField()),
                ('total_bs', models.FloatField()),
                ('reservacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reservacion.reserva')),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
            },
        ),
        migrations.CreateModel(
            name='DetVenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio', models.FloatField()),
                ('cantidad', models.IntegerField()),
                ('total_cantidad', models.FloatField()),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reservacion.productos')),
                ('venta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reservacion.venta')),
            ],
            options={
                'verbose_name': 'Detales de venta',
                'verbose_name_plural': 'Detalles de ventas',
            },
        ),
        migrations.CreateModel(
            name='DetalleReserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaLlegada', models.DateTimeField()),
                ('fechaSalida', models.DateTimeField()),
                ('cantidad', models.FloatField()),
                ('total_bs', models.FloatField()),
                ('codigoReserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservacion.reserva')),
                ('habitacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habitacion', to='reservacion.habitacion')),
            ],
        ),
    ]
